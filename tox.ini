[tox]
    
envlist =
    3.5-clean,
    3.5-check,
    2.7-cover,
    2.7-nocover,
    3.3-cover,
    3.3-nocover,
    3.4-cover,
    3.4-nocover,
    3.5-cover,
    3.5-nocover,
    3.5-report,
    2.7-docs

[testenv]
sitepackages=True
basepython =
    {2.7-docs,2.7-spell}: python2.7
    {3.5-clean,3.5-check,3.5-report,3.5-extension-coveralls,3.5-coveralls,3.5-codecov}: python3.5
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps = 
    pytest
    mock
    EPANETTOOLS

commands =
    {posargs:py.test -vv --ignore=src}

[testenv:3.5-spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
usedevelop = false
deps =
    #-r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:2.7-docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:3-5-bootstrap]
deps =
    jinja2
    matrix
skip_install = true
usedevelop = false
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:3.5-check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
usedevelop = false
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests conda setup.py 
    isort --verbose --check-only --diff --recursive src tests setup.py

[testenv:3.5-coveralls]
deps =
    coveralls
    EPANETTOOLS
skip_install = true
usedevelop = false
commands =
    coverage combine --append
    coverage report
    coveralls []

[testenv:3.5-codecov]
deps =
    codecov
skip_install = true
usedevelop = false
commands =
    coverage combine --append
    coverage report
    coverage xml --ignore-errors
    codecov []


[testenv:3.5-report]
deps = 
    coverage
skip_install = true
usedevelop = false
commands =
    coverage combine --append
    coverage report
    coverage html

[testenv:3.5-clean]
commands = coverage erase
skip_install = true
usedevelop = false
deps = 
    coverage

[testenv:2.7-cover]
basepython = {env:TOXPYTHON:python2.7}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
usedevelop = true
commands =
    {posargs:py.test --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:2.7-nocover]
basepython = {env:TOXPYTHON:python2.7}

[testenv:3.3-cover]
basepython = {env:TOXPYTHON:python3.3}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
usedevelop = true
commands =
    {posargs:py.test --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:3.3-nocover]
basepython = {env:TOXPYTHON:python3.3}

[testenv:3.4-cover]
basepython = {env:TOXPYTHON:python3.4}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
usedevelop = true
commands =
    {posargs:py.test --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:3.4-nocover]
basepython = {env:TOXPYTHON:python3.4}

[testenv:3.5-cover]
basepython = {env:TOXPYTHON:python3.5}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
usedevelop = true
commands =
    {posargs:py.test --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:3.5-nocover]
basepython = {env:TOXPYTHON:python3.5}


