# https://ci.appveyor.com/project/asselapathirana/rrpam-wds

matrix:
  fast_finish: true

#branches:
#  only:
#    - master 

environment:
  access_token:
      secure: MD1NLo5TVq91rOlFoo4+S3ko6bkwo3cFOfNYlpZjeDh8P0exIasW+E5ErwkCbXjJ
  global:
    # Used by qthelpers to close widgets after a defined time
    TEST_CI: True
    TEST_CI_APP: True
    # Environment variables used by astropy helpers
    PYTHON: "C:\\conda"
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\ci-helpers\\appveyor\\windows_sdk.cmd"
    #PYTHON_ARCH: "64" # needs to be set for CMD_IN_ENV to succeed. If a mix
    #                  # of 32 bit and 64 bit builds are needed, move this
    #                  # to the matrix section.
    CONDA_DEPENDENCIES: "pyqt=5.*  numpy scipy pillow Cython" # keep this sync with requirements_conda.txt
    # need to automate reading in that file and remove hardcoding these!

  matrix:

# PyQt5
#    - PYTHON_VERSION: "3.5" # alas, EPANETTOOLS uses mingwpy which is not yet ported to py3.5
#      USE_QT_API: "PyQt5"
#      PYTEST_QT_API: "pyqt5"
    - PYTHON_VERSION: "3.4"  
      USE_QT_API: "PyQt5"
      PYTHON_ARCH: "64"
      PLATFORM: "x64"
      PYTEST_QT_API: "pyqt5"
      HOOK_BACK: "True"
    - PYTHON_VERSION: "2.7"
      USE_QT_API: "PyQt5"
      PYTEST_QT_API: "pyqt5"
      PYTHON_ARCH: "64"
      PLATFORM: "x64"
    - PYTHON_VERSION: "3.4"  
      USE_QT_API: "PyQt5"
      PYTHON_ARCH: "32"
      PLATFORM: "x86"
      PYTEST_QT_API: "pyqt5"
    - PYTHON_VERSION: "2.7"
      USE_QT_API: "PyQt5"
      PYTEST_QT_API: "pyqt5"
      PYTHON_ARCH: "32"
      PLATFORM: "x86"


#platform:
#  -x64

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
      https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
      Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }
  # Astropy ci-helpers. See https://github.com/astropy/ci-helpers
  - "git clone git://github.com/astropy/ci-helpers.git"
  - "powershell ci-helpers/appveyor/install-miniconda.ps1"
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "activate test"
  # Install pip dependencies.
  - "python ./service/installreq.py " # install the rest of the dependancies using pip
  - choco install -y InnoSetup
  - set PATH=%PATH%;"C:\\Program Files (x86)\\Inno Setup 5"
  - "python setup.py develop"
  
# Not a .NET project, we build in the install step instead
build: false

test_script:
  - pytest -v
  - conda env export > service\appveyor_environment.yml
  - if "%PYTHON_VERSION%" == "3.4" python freeze.py > service\freeze.log

after_test:
#hack! 
- if "%PYTHON_VERSION%" == "3.4" xcopy "C:\conda\envs\test\Library\bin\libiomp5md.dll" .\dist\  /y
- if "%PYTHON_VERSION%" == "3.4" xcopy "C:\conda\envs\test\Library\bin\mkl_core.dll" .\dist\ /y
#end hack
- if "%PYTHON_VERSION%" == "3.4" iscc /VERYSILENT ./service/rrpamwds_setup.iss > service\innosetup.log

artifacts:
  - path: service\*.exe 
  - path: service\*.log
  - path: service\appveyor_environment.yml
  
on%HOOK_BACK% _success:

- ps: >-
     If ($env:HOOK_BACK -Match "True") {

  echo "Doing commit "
  mkdir "c:\rrpam-wds"
  cd  "c:\rrpam-wds"
  git config --global credential.helper store
  Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:access_token):x-oauth-basic@github.com`n"
  git config --global user.email "assela@pathirana.net"
  git config --global user.name "Assela Pathirana"
  git clone git@github.com:asselapathirana/RRPam-WDS-exetest.git
  cd rrpam-wds
  updated on %DATE% %TIME% >> log.txt
  git add log.txt
  git commmit -am "appveyor "
  git push origin master 

  }

 
